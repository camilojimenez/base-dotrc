bind < resize-pane -L 1 # left
bind > resize-pane -R 1 # right
bind ^ resize-pane -U 1 # up
bind v resize-pane -D 1 # down

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

setw -g mouse

bind - split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# bind-key ` last-window # easy cycling through window last window ``  (double backticks)
set -g base-index 1

set-option -g prefix `
unbind %
unbind-key C-b

# as per nvim
set-option -sg escape-time 10
set-option -g default-terminal "screen-256color"

## smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
